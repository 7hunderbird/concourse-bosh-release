# vim: ft=yaml
---
name: worker

description: >
  The ground crew registers a Garden worker with the ATC on an interval,
  advertises supported resource types, and cleans up ephemeral containers on
  shutdown.

templates:
  ctl.erb: bin/ctl
  drain.erb: bin/drain
  pre_start.erb: bin/pre_start
  env.sh.erb: config/env.sh
  worker_gateway_host_key.pub.erb: config/worker_gateway_host_key.pub

packages:
- concourse
- btrfs_tools

consumes:
- name: web
  type: web
  optional: true

properties:
  log_level:
    env: CONCOURSE_LOG_LEVEL
    description: |
      The log level for the worker. When set to debug, you'll see a lot more
      information.
    default: info

  team:
    env: CONCOURSE_TEAM
    description: |
      Register the worker for a single team.

      If not specified, the worker will be shared across all teams.

  tags:
    env: CONCOURSE_TAG
    description: |
      An array of tags to advertise for each worker.
    example: [special]

  http_proxy_url:
    env: http_proxy
    description: |
      Proxy to use for outgoing http requests from containers.

  https_proxy_url:
    env: https_proxy
    description: |
      Proxy to use for outgoing https requests from containers.

  no_proxy:
    env: no_proxy
    description: |
      A list domains and IPs with optional port for which the proxy should be bypassed, e.g. [localhost, 127.0.0.1, example.com, domain.com:8080]

  certs_path:
    env: CONCOURSE_CERTS_DIR
    description: |
      A path to a directory on the instance to create the resource certificates volume from.
    default: "/etc/ssl/certs"

  drain_timeout:
    description: |
      Maximum wait time in Go duration format (1m = 1 minute) for worker drain
      to be finished. Only applies when worker is getting shutdown.

      If not specified, it will be indefinite.
    default: 1h

  ephemeral:
    env: CONCOURSE_EPHEMERAL
    description: |
      If set, the worker will immediately disappear upon stalling.
    default: false

  sweep_interval:
    env: CONCOURSE_SWEEP_INTERVAL
    description: |
      Interval on which to destroy containers and volumes marked for garbage
      collection.
    default: 30s

  worker_gateway.hosts:
    env: CONCOURSE_TSA_HOST
    description: |
      Addresses (host:port) of TSA servers to register with.

      If not specified, the `web` link is used.

  worker_gateway.host_public_key:
    env_file: CONCOURSE_TSA_PUBLIC_KEY
    description: >
      Public key to verify for the TSA server.

      If not specified, the `web` link is used.
    example: 'ssh-rsa ...'

  worker_gateway.worker_key:
    type: ssh
    env_fields: {private_key: {env_file: CONCOURSE_TSA_WORKER_PRIVATE_KEY}}
    description: |
      SSH key to use when authenticating with the TSA.
    example:
      private_key: |
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----
      public_key: 'ssh-rsa ...'

  worker_gateway.rebalance_interval:
    env: CONCOURSE_REBALANCE_INTERVAL
    description: |
      The interval on which the worker will connect to a new SSH gateway and
      drain the old connection. This has the effect of rebalancing the
      forwarded workers across the SSH gateways over time.

      A value of 0 means that the worker will not rebalance over time, and
      instead stick with whichever SSH gateway it initially connected to.
    default: 0s

  baggageclaim.driver:
    env: CONCOURSE_BAGGAGECLAIM_DRIVER
    description: |
      Driver to use for the volume store. One of detect, overlay, btrfs, or naive.
    default: detect

  baggageclaim.bind_port:
    env: CONCOURSE_BAGGAGECLAIM_BIND_PORT
    description: |
      Port on which Baggageclaim should listen for HTTP traffic.
    default: 7788
